buildscript {
    ext.kotlin_version = "1.1.3-2"

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
    }
}

apply plugin: "application"
apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"

mainClassName = "org.rimumarkup.RimucKt"
applicationName = "rimu-kt"
group = "org.rimumarkup"
version = "0.6.0"

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile group: "junit", name: "junit", version: "4.12"
    testCompile "com.github.stefanbirkner:system-rules:1.16.1"
    testCompile "com.beust:klaxon:0.31"
}

startScripts {
    // Set name of executable Rimu compile command in binary distribution.
    applicationName = "rimuc"
}

// Create a sources JAR file.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
    exclude '**/*.rmu'     // Exclude resource files.
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

Properties localProperties = new Properties()
localProperties.load(new FileInputStream("./local.properties"))

// Used by bintrayUpload task publishes Maven library to Bintray.
// See https://github.com/bintray/gradle-bintray-plugin
bintray {
    dryRun = true
    publish = false
    override = false
    user = localProperties['bintray.user']
    key = localProperties['bintray.apikey']
    publications = ['library']
    pkg {
        repo = 'maven'
        name = project.applicationName
        licenses = ['MIT']
        vcsUrl = 'https://github.com/srackham/rimu-kt'
        websiteUrl = 'http://rimumarkup.org'
        issueTrackerUrl = 'https://github.com/srackham/rimu/issues'
        desc = 'Rimu Markup for the JVM.'
        labels = ['rimu', 'markup', 'asciidoc', 'markdown']
        publicDownloadNumbers = false
        version {
            name = project.version
        }
    }
}

